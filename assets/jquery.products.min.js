/**
 * Cookie plugin
 *
 * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
 window.Shopify = Shopify || {};
 window.Shopify.cookie=function(e,o,i){if(void 0===o){var n=null;if(document.cookie&&""!=document.cookie)for(var r=document.cookie.split(";"),t=0;t<r.length;t++){var p=jQuery.trim(r[t]);if(p.substring(0,e.length+1)==e+"="){n=decodeURIComponent(p.substring(e.length+1));break}}return n}i=i||{},null===o&&(o="",i.expires=-1);var s,u="";i.expires&&("number"==typeof i.expires||i.expires.toUTCString)&&("number"==typeof i.expires?(s=new Date).setTime(s.getTime()+24*i.expires*60*60*1e3):s=i.expires,u="; expires="+s.toUTCString());var c=i.path?"; path="+i.path:"",m=i.domain?"; domain="+i.domain:"",a=i.secure?"; secure":"";document.cookie=[e,"=",encodeURIComponent(o),u,c,m,a].join("")};
 // ---------------------------------------------------------------------------
// Money format handler
// ---------------------------------------------------------------------------
Shopify.money_format = "${{amount}}";
Shopify.formatMoney = function(cents, format) {
if (typeof cents == 'string') { cents = cents.replace('.',''); }
var value = '';
var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
var formatString = (format || this.money_format);
function defaultOption(opt, def) {
return (typeof opt == 'undefined' ? def : opt);
}
function formatWithDelimiters(number, precision, thousands, decimal) {
precision = defaultOption(precision, 2);
thousands = defaultOption(thousands, ',');
decimal   = defaultOption(decimal, '.');
if (isNaN(number) || number == null) { return 0; }
number = (number/100.0).toFixed(precision);
var parts   = number.split('.'),
dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
cents   = parts[1] ? (decimal + parts[1]) : '';
return dollars + cents;
}
switch(formatString.match(placeholderRegex)[1]) {
case 'amount':
value = formatWithDelimiters(cents, 2);
break;
case 'amount_no_decimals':
value = formatWithDelimiters(cents, 0);
break;
case 'amount_with_comma_separator':
value = formatWithDelimiters(cents, 2, '.', ',');
break;
case 'amount_no_decimals_with_comma_separator':
value = formatWithDelimiters(cents, 0, '.', ',');
break;
}
return formatString.replace(placeholderRegex, value).replace(/\$/g, 'â‚±');
};
/**
 * Module to show Recently Viewed Products
 *
 * Copyright (c) 2014 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
var Shopify = Shopify || {};
Shopify.Products = (function () {
  var a = {
    howManyToShow: 3,
    howManyToStoreInMemory: 10,
    wrapperId: "recently-viewed-products",
    templateId: "recently-viewed-product-template",
    pagerSummaryTemplateId:"recently-viewed-pager-summary-template",
    pager:"recently-viewed-pager",
    
    onComplete: null,
  };
  var c = [];
  var h = null;
  var d = null;
  var e = 0;
  var b = {
    configuration: { expires: 90, path: "/", domain: window.location.hostname },
    name: "shopify_recently_viewed",
    write: function (i) {
      window.Shopify.cookie(this.name, i.join(" "), this.configuration);
    },
    read: function () {
      var i = [];
      var j = window.Shopify.cookie(this.name);
      if (j !== null) {
        i = j.split(" ");
      }
      return i;
    },
    destroy: function () {
      window.Shopify.cookie(this.name, null, this.configuration);
    },
    remove: function (k) {
      var j = this.read();
      var i = jQuery.inArray(k, j);
      if (i !== -1) {
        j.splice(i, 1);
        this.write(j);
      }
    },
  };
  var f = function () {
    h.show();
    if (a.onComplete) {
      try {
        a.onComplete();
      } catch (i) {}
    }
  };
  var g = function () {
    if (c.length && e < a.howManyToShow) {
      jQuery.ajax({
        dataType: "json",
        url: "/products/" + c[0] + ".js",
        cache: false,
        success: function (i) {
          d.tmpl(i).appendTo(h);
          c.shift();
          e++;
          g();
        },
        error: function () {
          b.remove(c[0]);
          c.shift();
          g();
        },
      });
    } else {
      f();
    }
  };
  return {
    resizeImage: function (m, j) {
      if (j == null) {
        return m;
      }
      if (j == "master") {
        return m.replace(/http(s)?:/, "");
      }
      var i = m.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?/i);
      if (i != null) {
        var k = m.split(i[0]);
        var l = i[0];
        return (k[0] + "_" + j + l).replace(/http(s)?:/, "");
      } else {
        return null;
      }
    },
    showRecentlyViewed: function (i) {
      var i = i || {};
      jQuery.extend(a, i);
      c = b.read();
      d = jQuery("#" + a.templateId);
      h = jQuery("#" + a.wrapperId);
      var searchSummaryTmpl = jQuery('#' + a.pagerSummaryTemplateId);
      var pager = jQuery('#' + a.pager);
      
      a.howManyToShow = Math.min(c.length, a.howManyToShow);
      if (a.howManyToShow && d.length && h.length) {
        var search = location.search.substring(1);
        search = JSON.parse('{"' + decodeURI(search).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g,'":"') + '"}');
        var currPage = search.page || 1;
        if(c.length > 6) {
          var subtotal = currPage * 6;
          var pagination = pager.find('.pagination');
          subtotal = Math.min(subtotal, c.length);
          searchSummaryTmpl.tmpl({subtotal, total: c.length}).prependTo(pager);
          if(currPage > 1) {
            jQuery('#recently-viewed-pager-prev').tmpl({prev: currPage - 1}).appendTo(pagination)
          }
          var str = '';
          for(var i =1, l=Math.ceil(c.length / 6); i<=l; i++) {
            if(i == currPage) {
              str += `<span class="page current">${i}</span>`
            } else {
              str += `<span class="page"><a href="/account?page=${i}&amp;view=products">${i}</a></span>`
            }
          }
          pagination.append(str);
          if(currPage*6 <= c.length) {
            jQuery('#recently-viewed-pager-next').tmpl({next: currPage + 1}).appendTo(pagination)
          }
          pager.show();
        }
        c = c.slice((currPage - 1) * 6, (currPage - 1) * 6 + 6);
        g();
      }

    },
    getConfig: function () {
      return a;
    },
    clearList: function () {
      b.destroy();
    },
    recordRecentlyViewed: function (l) {
      var l = l || {};
      jQuery.extend(a, l);
      var j = b.read();
      if (window.location.pathname.indexOf("/products/") !== -1) {
        var k = window.location.pathname.match(/\/products\/([a-z0-9\-\_]+)/)[1];
        var i = jQuery.inArray(k, j);
        if (i === -1) {
          j.unshift(k);
          j = j.splice(0, a.howManyToStoreInMemory);
        } else {
          j.splice(i, 1);
          j.unshift(k);
        }
        b.write(j);
      }
    },
  };
})();
