
<script>

    const currentLocation=`<div>Shipping address</div><div onclick="googlePinMaps()" class="hoverDatabtn" style="cursor: pointer;"><i class="fa-solid fa-map-location-dot"></i></div>`;
    window.find($('.dropdown-province .section__header .section__title').html(currentLocation));
          document.querySelector('.dropdown-province .section__header .section__title').style.display='flex';
        document.querySelector('.dropdown-province .section__header .section__title').style.justifyContent='space-between';
    
        function selectOptionByDataAttributeValue(dataAttribute, valueToSelect) {
    var selectElement = document.querySelector('#checkout_shipping_address_province'); // Change this ID to match your select element ID
    
    for (var i = 0; i < selectElement.options.length; i++) {
      var option = selectElement.options[i];
      var dataValue = option.getAttribute(dataAttribute);
      
      if (dataValue === valueToSelect) {
        option.selected = true;
        break; // Exit the loop once the option is found and selected
      }
    }
  }
  
    var sectionContent = window.document.getElementsByClassName('section__content')[0];
  
          // Create a new <div> element
          // var Element = document.createElement('div');
          // Element.id = "addInputText";
          // sectionContent.append(Element);
    
          sectionContent.innerHTML=`
          <div style="display: flex;">
            <div style="margin: 0 6px" class="field field--required field--half" data-address-field="first_name">
            <div class="field__input-wrapper">
              <label class="field__label field__label--visible" for="checkout_shipping_address_first_name">First Name</label>
              <input placeholder="First Name" autocomplete="shipping given-name" autocorrect="off" data-backup="first_name" class="field__input" aria-required="true" size="30" type="text" value="awdwd" name="checkout[shipping_address][first_name]" id="checkout_shipping_address_first_name">
            </div>
               </div>
               
                <div style="margin: 0 6px" class="field field--required field--half" data-address-field="last_name">
                 <div class="field__input-wrapper">
               <label class="field__label field__label--visible" for="checkout_shipping_address_last_name">Last name</label>
              <input placeholder="Last name" autocomplete="shipping family-name" autocorrect="off" data-backup="last_name" class="field__input" aria-required="true" size="30" type="text" name="checkout[shipping_address][last_name]" id="checkout_shipping_address_last_name">
            </div>
               </div>
          </div>
  
            <div class="fieldset">
            <div data-shopify-pay-email-flow="false" class="field field--required">
              
              <div class="field__input-wrapper"><label class="field__label field__label--visible" for="checkout_email">Email</label>
                <input placeholder="Email" autocapitalize="off" spellcheck="false" autocomplete="shipping email" data-autofocus="true" data-backup="customer_email" aria-describedby="checkout-context-step-one" aria-required="true" aria-invalid="true" class="field__input" size="30" type="email" name="checkout[email]" id="checkout_email">
              </div>
              </div>        </div> 
  
          <div class="fieldset-description marketing-text" data-buyer-accepts-marketing="">
            <div class="section__content">
              <div class="checkbox-wrapper">
    <div class="checkbox__input">
      <input name="checkout[buyer_accepts_marketing]" type="hidden" value="0" autocomplete="off"><input class="input-checkbox" data-email-marketing="true" data-backup="buyer_accepts_marketing" type="checkbox" value="1" checked="checked" name="checkout[buyer_accepts_marketing]" id="checkout_buyer_accepts_marketing">
    </div>
    <label class="checkbox__label" for="checkout_buyer_accepts_marketing">
    <div>Email me with news and offers</div>
  </label></div>
  
            </div>
          </div>
          `;
    
  
   // document.querySelector('#addInputText').innerHTML=addInputText;
   document.querySelector('#continue_button').addEventListener("click", function (e) {
        // document.querySelector('#error-for-address1')='Enter a City';
  
       // Create a new <div> element
      var sectionData = $('#checkout_email');
          var Element = document.createElement('div');
          Element.id = "error-for-first_name";
          Element.textContent = "Enter a City";
          sectionData.append(Element);
            });
  
      setTimeout(()=>{
                if($('#checkout_shipping_address_city').val() == ''){
                         // Create a new <div> element
                  var sectionData = $('#checkout_shipping_address_city');
                  var Element = document.createElement('div');
                  Element.id = "error-for-address_city";
                  Element.textContent = "Enter a Province";
                  sectionData.append(Element);
                }

                if($('#checkout_shipping_address_city').val() == ''){
                  
                }

              if($('#checkout_shipping_address_city').val() == ''){
                  
                }

              if($('#checkout_shipping_address_city').val() == ''){
                  
                }

            if($('#checkout_shipping_address_city').val() == ''){
                  
                }
               document.querySelector('#error-for-province').innerHTML='';
              document.querySelector('#error-for-address1').innerHTML='Enter a City';
              document.querySelector('#error-for-address2').innerHTML='Enter a Barangay';
              document.querySelector('#error-for-company').innerHTML='Enter a Province';
              document.querySelector('#error-for-zip').innerHTML='Enter a an apartment, suite, etc.';
              document.querySelector('#error-for-city').innerHTML='Enter a postal code';
             
        
      },1000);
    
      // This section is for Province
      $('.field__input-wrapper')[6].innerHTML = `<label class="field__label field__label--visible" for="checkout_shipping_address_city">Province</label>
      <select class=" field__input field__input -- select "
      placeholder="Province" autocomplete="shipping address-level2" autocorrect="off" autocomplete="off" data-backup="city" aria-required="true" type="text" name="checkout[shipping_address][city]" id="checkout_shipping_address_city" >
       {%- render 'arrProvince-shipping_address' -%}
      </select>
         <div class="field__caret">
          <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-10 field__caret-svg" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#caret-down"></use> </svg>
        </div>
      `;
  
      //this section is for city
      $('.field__input-wrapper')[7].innerHTML = ` <label class="field__label field__label--visible" for="checkout_shipping_address_address2">Town or City</label>
      <select class=" field__input field__input -- select "
      placeholder="Town or City" autocomplete="shipping address-line2"  autocorrect="off" autocomplete="off" data-backup="address2" aria-required="true" type="text" name="checkout[shipping_address][address2]" id="checkout_shipping_address_address2" >
      <option value="">Town or City</option>
      </select>
         <div class="field__caret">
          <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-10 field__caret-svg" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#caret-down"></use> </svg>
        </div>
      `;
      
       //this section is for barangay
       $('.field__input-wrapper')[8].innerHTML = ` 
       <label class="field__label field__label--visible" for="checkout_shipping_address_address1">Barangay</label>
       <select class=" field__input field__input -- select "
       placeholder="Barangay" autocomplete="shipping address-line1"  autocorrect="off" autocomplete="off" data-backup="address1" aria-required="true" type="text" name="checkout[shipping_address][address1]" id="checkout_shipping_address_address1" >
       <option value="">Barangay</option>
       </select>
          <div class="field__caret">
          <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-10 field__caret-svg" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#caret-down"></use> </svg>
        </div>
  
        <p class="field__additional-info visually-hidden" data-address-civic-number-warning="">
        <svg class="icon-svg icon-svg--size-16 field__message__icon" aria-hidden="true" focusable="false"> <use xlink:href="#info"></use> </svg>
        Add a house number if you have one
        </p>
        `;
  
         // this section is for Street address
         $('.field__input-wrapper')[9].innerHTML = `
       
        <label class="field__label field__label--visible" for="checkout_shipping_address_company">House or Unit Number / Street Name</label>
        <input placeholder="House or Unit Number / Street Name" autocomplete="shipping organization" autocorrect="off" autocomplete="off" data-backup="company" class="field__input" aria-required="true" type="text"  name="checkout[shipping_address][company]" id="checkout_shipping_address_company">
        
        `;
  
         // this section is for Zip code
         $('.field__input-wrapper')[10].innerHTML = `
         <label class="field__label field__label--visible" for="checkout_shipping_address_zip">Postal code</label>
         <input placeholder="Postal code" autocomplete="shipping postal-code" autocorrect="off" autocomplete="off" data-backup="zip" class="field__input field__input--zip" aria-required="true" type="text" name="checkout[shipping_address][zip]" id="checkout_shipping_address_zip" readonly>
        `;
  
          // remove display in Region
         $('.field__input-wrapper')[11].style.display='none';
  
    // not using on this because of slow fetching
     var arr_shipping_address = JSON.parse(localStorage.getItem("arrProvince"));
  
   document.querySelector('#checkout_shipping_address_city').addEventListener("change",() => {
         const AutoRegionData=`["${$('#checkout_shipping_address_city').val()}"]`;
     selectOptionByDataAttributeValue('data-alternate-values', AutoRegionData);
     
      let province = $("#checkout_shipping_address_city").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?PROVINCE=${province}`;
      City = [];
      City.push('<option value="">Town or City</option>');
      jQuery
        .ajax({
          url: url,
          type: "GET",
          dataType: "jsonp",
          contentType: "application/json; charset=UTF-8",
        })
        .done(function (json) {
          if (json != "") {
            for (let i = 0; i < json[0].CITY.length; i++) {
              const arrC = `<option value="${json[0].CITY[i].CITY}">${json[0].CITY[i].CITY}</option>`;
              City.push(arrC);
            }
          } else {
            City.push();
          }
          City.sort();
          $("#checkout_shipping_address_address2").html(City.join(""));
        
        });
    });   
  
   document.querySelector('#checkout_shipping_address_address2').addEventListener("change",()=> {
      let city = $("#checkout_shipping_address_address2").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?CITY=${city}`;
      Brgy = [];
      ZipBarangay=[];
      Brgy.push('<option value="" Selected>Barangay</option>');
      jQuery
        .ajax({
          url: url,
          type: "GET",
          dataType: "jsonp",
          contentType: "application/json; charset=UTF-8",
        })
        .done(function (json) {
          for (let i = 0; i < json[0].CITY[0].BARANGAY.length; i++) {
            const arrC = `<option value="${json[0].CITY[0].BARANGAY[i].BARANGAY}">${json[0].CITY[0].BARANGAY[i].BARANGAY}</option>`;
            const arrZ = [
              json[0].CITY[0].BARANGAY[i].BARANGAY,
              json[0].CITY[0].BARANGAY[i].ZIP,
            ];
            Brgy.push(arrC);
            ZipBarangay.push(arrZ);
          }
          console.log(Brgy)
            Brgy.sort();
          $("#checkout_shipping_address_address1").html(Brgy.join(""));
        });
    }); 
  
      document.querySelector('#checkout_shipping_address_address1').addEventListener("change",() => {
      let barangay = $("#checkout_shipping_address_address1").val();
      // Function to find the value for a given location
      function findValueForLocation(locationName) {
        for (let i = 0; i < ZipBarangay.length; i++) {
          if (ZipBarangay[i][0] === locationName) {
            return ZipBarangay[i][1];
          }
        }
        return null; // Return null if location is not found
      }
      const zipCode = findValueForLocation(barangay);
      $("#checkout_shipping_address_zip").val(zipCode);
  
         customer_address= `{"province":"${$('#checkout_shipping_address_city').val()}","city":"${$('#checkout_shipping_address_address2').val()}","barangay":"${$('#checkout_shipping_address_address1').val()}","zip":"${zipCode}","street_address":"${$('#checkout_shipping_address_company').val()}"}`;
           localStorage.setItem('customer_address',customer_address);
    });
  
  
    // For get the customer address data
      function AutoGetCity() {
      let province = $("#checkout_shipping_address_city").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?PROVINCE=${province}`;
      City = [];
      City.push('<option value="">Town or City</option>');
      jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8", }).done(function (json) {
          if (json != "") {
            for (let i = 0; i < json[0].CITY.length; i++) {
              const arrC = `<option value="${json[0].CITY[i].CITY}">${json[0].CITY[i].CITY}</option>`;
              City.push(arrC);
            }
          } else {
            City.push();
          }
            $("#checkout_shipping_address_address2").html(City.join(""));
        });
    }
  
      function AutoGetBarangay() {
        let city = $("#checkout_shipping_address_address2").val();
        url = `https://tools.gabcgfs.com/address_finder_dev.php?CITY=${city}`;
        Brgy = [];
        Brgy.push('<option value="" Selected>Barangay</option>');
        jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8"}).done(function(json) {
          for (let i = 0; i < json[0].CITY[0].BARANGAY.length; i++) {
            const arrC = `<option value="${
              json[0].CITY[0].BARANGAY[i].BARANGAY
            }">${
              json[0].CITY[0].BARANGAY[i].BARANGAY
            }</option>`;
            Brgy.push(arrC);
          }
          $("#checkout_shipping_address_address1").html(Brgy.join(""));
        });
      }
  
          // Get a customer address if there is a existing data
          const addressGathering = JSON.parse(localStorage.getItem('customer_address'));
        if(addressGathering != null){
          $('#checkout_shipping_address_city').val(addressGathering.province);
            AutoGetCity();
         const AutoGetRegionData=`["${$('#checkout_shipping_address_city').val()}"]`;
         selectOptionByDataAttributeValue('data-alternate-values', AutoGetRegionData);
          // delay a output
        setTimeout(()=>{
          document.querySelector('#checkout_shipping_address_address2').value=addressGathering.city;
          AutoGetBarangay();
           setTimeout(()=>{
          document.querySelector('#checkout_shipping_address_address1').value=addressGathering.barangay;
        },1000);
        },800);
  
           $('#checkout_shipping_address_company').val(addressGathering.street_address);
           $('#checkout_shipping_address_zip').val(addressGathering.zip);
        }
    
    // Get a location pin
      function googlePinMaps(){
      fetch("https://tools.gabcgfs.com/Maps/data.php")
        .then((response) => response.json())
        .then((json) => GetData(json));
  
      function GetData(zipCodeData) {
  
        function findZipCode(lat, lon) {
          // Calculate the closest ZIP code based on latitude and longitude
          let closestZipCode = null;
          // MAX_SAFE_INTEGER and it is 9007199254740991
          let closestDistance = Infinity;
  
          for (const entry of zipCodeData) {
            const distance = calculateDistance(lat, lon, entry.lat, entry.lon);
            if (distance < closestDistance) {
              closestDistance = distance;
              closestZipCode = entry.postalCode;
              Province = entry.province;
              City = entry.city;
              Barangay = entry.barangay;
  
            }
          }
          customer_address= `{"province":"${Province}","city":"${City}","barangay":"${Barangay}","zip":"${closestZipCode}","street_address":""}`;
           localStorage.setItem('customer_address',customer_address);
           // return [Province, City, Barangay, closestZipCode];
        }
  
        // Helper function to calculate distance between two points using Haversine formula
        function calculateDistance(lat1, lon1, lat2, lon2) {
          const radius = 6371; // Earth's radius in kilometers
          const dLat = degToRad(lat2 - lat1);
          const dLon = degToRad(lon2 - lon1);
  
          const a =
            Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(degToRad(lat1)) * Math.cos(degToRad(lat2)) *
            Math.sin(dLon / 2) * Math.sin(dLon / 2);
  
          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
          const distance = radius * c;
  
          return distance;
        }
  
        // Helper function to convert degrees to radians
        function degToRad(deg) {
          return deg * (Math.PI / 180);
        }
  
        getLocation()
  
        function getLocation() {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
          } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
          }
        }
  
        function showPosition(position) {
          // Example usage
          const latitude = position.coords.latitude;
          const longitude = position.coords.longitude;
          const zipCode = findZipCode(latitude, longitude);
          if(!zipCode){
            window.location.reload();
          }
          // console.log(`The nearest ZIP code is ${zipCode}`);
          // document.getElementById('address').innerHTML = zipCode;
        }
      }
    }
  </script>
  