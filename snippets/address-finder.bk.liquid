{% comment %} <div id="AddressFinder" class="modal modal modal--square" data-section-type="address-finder-popup">
  <div class="modal__inner">
    <div class="modal__centered medium-up--text-center">
        <div class="modal__centered-content">
              <p class="address-finder-heading">{{ 'cart.address_finder.label' | t }}</p>
              <div class="helper-message">
                {%- if account -%}
                <span>{{ 'cart.address_finder.guide_html' | t }}</span>
                {%- else -%}
                <span>{{ 'cart.address_finder.guide' | t }}</span>
                {%- endif -%}
              </div>
              {%- if account -%}
              <div class="address-finder-inputs small--one-whole address-finder-half">
                  <input type="text" id="firstname" class="input-full" name="address[firstname]" onkeypress="return /^[a-zA-Z\s]*$/.test(event.key)" value="" placeholder="First Name" autocapitalize="characters" onchange='Validate(this);'>
              </div>

              <div class="address-finder-inputs small--one-whole address-finder-half">
                  <input type="text" id="lastname" class="input-full" name="address[lastname]" onkeypress="return /^[a-zA-Z\s]*$/.test(event.key)" value="" placeholder="Last Name" onchange='Validate(this);'>
              </div>
              {%- endif -%}
              <div class="prov-container">
                <select id="province" class="custom-select" placeholder="Select Province" onchange="GetList('city', this);">{%- render 'province-list' -%}</select>
                <span class="chevron"></span>
              </div>
              <div class="city-container">
                <select id="city" class="custom-select" placeholder="Select Town or City" onchange="GetList('brgy', this);">
                  <option value="" disabled selected>{{ 'cart.address_finder.select_city' | t }}</option>
                </select>
                <span class="chevron"></span>
              </div>
              <div class="brgy-container" class="custom-select">
                <select id="barangay" class="custom-select" placeholder="Select Barangay" onchange="GetList('zip', this);">
                  <option value="" disabled selected>{{ 'cart.address_finder.select_barangay' | t }}</option>
                </select>
                <span class="chevron"></span>
              </div>
              <div class="zip-container" class="custom-select">
                <select id="zipcode" class="custom-select" placeholder="Select Zip Code" onchange='Validate(this);'>
                  <option value="" disabled selected>{{ 'cart.address_finder.select_zip' | t }}</option>
                </select>
                <span class="chevron"></span>
              </div>  

              <div class="house-container">
                <input id="house-code" type="text" placeholder="House or Unit Number / Street Name / Landmark" value="" onchange='Validate(this); minimum_length(this, 10);'>
                <small class="info-message">{{ 'cart.address_finder.warning' | t }}</small>
              </div>
              
              {%- if account -%}
              <div class="phone-container margin-top-10">
                <input id="phone" type="tel" placeholder="Phone" value="" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" required onchange='Validate(this); minimum_length(this, 11);'>
              </div>
              {%- endif -%}

              <div class="bottom-btn">
                <span class="btn save--btn" onclick="PopulateAddress();">{{ 'cart.address_finder.verify_address' | t }}</span>
              </div>
            </div>
      
          <button type="button" class="modal__close js-modal-close text-link">
              <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-close" viewBox="0 0 64 64"><path d="M19 17.61l27.12 27.13m0-27.12L19 44.74"/></svg>
              <span class="icon__fallback-text">{{ 'general.accessibility.close_modal' | t | json }}</span>
            </button>
    </div>
  </div>
</div>

<script>
var $prov = document.getElementById("province"), $city = document.getElementById("city"), $brgy = document.getElementById("barangay"), $hcode = document.getElementById("house-code"), 
      $zip = document.getElementById("zipcode"), $helper_link = document.getElementById('helper-link');
  
var all_inputs = document.getElementById('AddressFinder').querySelectorAll('input'), all_selects = document.getElementById('AddressFinder').querySelectorAll('select');
var form_action = document.getElementById('CartPageForm'), retrievedObject = JSON.parse(sessionStorage.getItem('address'));

const e = new Event('change');
  
function minimum_length(elem, len) {
  if (elem.id = 'house-code') {
    if (elem.value.length < len) {
      elem.style.border = '1px solid #FF0000';
      return false;
    }
  } else {
    if (elem.value.length != len) {
      elem.style.border = '1px solid #FF0000';
      return false;
    }
  }
}

{%- unless account -%}var i = getStoredAddress(); {%- endunless -%}
  
function cancelBtn() {
    document.getElementById('AddressFinder').querySelector('.modal__close').click();
    document.getElementById('AddressFinder').classList.remove('modal--is-active');
    document.getElementById('AddressFinder').classList.add('hide'); 
}

function Capitalize(str) {
    new_str = str.toLowerCase().replace(/\b[a-z]/g, function(txtVal) {
        return txtVal.toUpperCase();
    });
    return new_str;
}
  
function Validate(elem) {
  if (elem != '') {
    elem.style.border = '1px solid #d9d9d9';
  }
}

function GetList(list, obj) {
    var url = "";
    var function_name = "";

//     switch (list) {
//         case "city":
//             $brgy.disabled = true;
//             $zip.disabled = true;
//             url = "https://tools.gabc.biz/get_table.php?callback=?&table=serviceable_areas&PROVINCE=" + $prov.options[$prov.selectedIndex].text;
//             function_name = "PopulateCity";
//             break;
//         case "brgy":
//             $zip.disabled = true;

//             url = "https://tools.gabc.biz/get_table.php?callback=?&table=serviceable_areas&BARANGAY=" + $city.options[$city.selectedIndex].text;
//             function_name = "PopulateBrgy";
//             break;
//         case "zip":
//             url = "https://tools.gabc.biz/zipcode_jsonp.php?callback=?&term=" + $prov.options[$prov.selectedIndex].text + "&term1=" + $city.options[$city.selectedIndex].text;
//             function_name = "PopulateZip";
//             break;
//     }
  	switch (list) {
        case "city":
            $brgy.disabled = true;
            $zip.disabled = true;
            url = "https://tools.gabc.biz/city_jsonp.php?callback=?&term=" + obj.value;
            function_name = "PopulateCity";
            break;
        case "brgy":
            $zip.disabled = true;

            url = "https://tools.gabc.biz/barangay_jsonp.php?callback=?&term=" + obj.value;
            function_name = "PopulateBrgy";
            break;
        case "zip":
            url = "https://tools.gabc.biz/zipcode_jsonp.php?callback=?&term=" + $prov.options[$prov.selectedIndex].text + "&term1=" + $city.options[$city.selectedIndex].text;
            function_name = "PopulateZip";
            break;
    }
    jQuery.ajax({
        url: url,
        type: "GET",
        dataType: "jsonp",
        contentType: "application/json; charset=UTF-8",
        jsonpCallback: function_name
    });
}

function PopulateCity(json) {
    $city.innerHTML = '<option value="" disabled selected>{{ 'cart.address_finder.select_city' | t }}</option>';
    $city.classList.add('ui-loading');
    if (!json.Error) {
        json.forEach(x => {
          var option = document.createElement('option');
              option.text = x.value ;
              option.value = x.key;
              $city.appendChild(option);
      });
    } else {
        alert(json.Message);
    }
    setTimeout(function() {
        $city.classList.remove("ui-loading");
        $city.disabled = false;
    }, 300);

    if (sessionStorage.address) {
        var retrievedObject = JSON.parse(sessionStorage.getItem('address')),
            retrievedAddress = {
                "addHouse": (retrievedObject.house !== "") ? retrievedObject.house : "",
                "addBarangay": (retrievedObject.brgy_id !== "") ? retrievedObject.brgy_id : "",
                "addCity": (retrievedObject.city_id !== "") ? retrievedObject.city_id : "",
                "addProvince": (retrievedObject.prov_id !== "") ? retrievedObject.prov_id : "",
                "addZip": (retrievedObject.zip !== "") ? retrievedObject.zip : ""
            };
        if (retrievedAddress['addProvince'] == $prov.value) {
            $city.value = retrievedAddress['addCity'];
            $city.dispatchEvent(e);
        } else {
            $city.selectedIndex = 0;
            $city.dispatchEvent(e);
        }
      
        $city.style.border = '1px solid #d9d9d9';
        $prov.style.border = '1px solid #d9d9d9';
      
    } else {
        $city.selectedIndex = 0;
        $brgy.selectedIndex = 0;
        $zip.selectedIndex = 0;
      
        if ($city != '') { $city.style.border = '1px solid #d9d9d9'; }
      if ($prov != '') { $prov.style.border = '1px solid #d9d9d9'; }
    }
}

function PopulateBrgy(json) {
    $brgy.innerHTML = '<option value="" disabled selected>{{ 'cart.address_finder.select_barangay' | t }}</option>';
    $brgy.classList.add("ui-loading");
    if (!json.Error) {
        json.forEach(x => {
          var option = document.createElement('option');
              option.text = x.value;
              option.value = x.key;
              $brgy.appendChild(option);
      });
    } else {
        alert(json.Message);
    }
    setTimeout(function() {
        $brgy.classList.remove("ui-loading");
        $brgy.disabled = false;
    }, 300);

    if (sessionStorage.address) {
        var retrievedObject = JSON.parse(sessionStorage.getItem('address')),
            retrievedAddress = {
                "addHouse": (retrievedObject.house !== "") ? retrievedObject.house : "",
                "addBarangay": (retrievedObject.brgy_id !== "") ? retrievedObject.brgy_id : "",
                "addCity": (retrievedObject.city_id !== "") ? retrievedObject.city_id : "",
                "addProvince": (retrievedObject.prov_id !== "") ? retrievedObject.prov_id : "",
                "addZip": (retrievedObject.zip !== "") ? retrievedObject.zip : ""
            };

        if (retrievedAddress['addCity'] == $city.value) {
            $brgy.value = retrievedAddress['addBarangay'];
            $brgy.dispatchEvent(e);
        } else {
            $brgy.selectedIndex = 0;
            $brgy.dispatchEvent(e);
        }          
        
        $city.style.border = '1px solid #d9d9d9';
    $prov.style.border = '1px solid #d9d9d9';
        $brgy.style.border = '1px solid #d9d9d9';
      
    } else {
        $brgy.selectedIndex = 0;
        $zip.selectedIndex = 0;
      
        if ($brgy != '') { $brgy.style.border = '1px solid #d9d9d9'; }
    }
}

function PopulateZip(json) {
  $zip.innerHTML = '<option value="" disabled selected>{{ 'cart.address_finder.select_zip' | t }}</option>';
  $zip.classList.add('ui-loading');
  if (!json.Error) {
    json.forEach(x => {
          var option = document.createElement('option');
              option.text = x;
              option.value = x;
              $zip.appendChild(option);
      });
  } else {
    alert(json.Message);
  }
  setTimeout(function () {
    $zip.classList.remove("ui-loading");
    $zip.disabled = false;
  }, 300);

  if (sessionStorage.address) {
    var retrievedObject =  JSON.parse(sessionStorage.getItem('address')),
        retrievedAddress = {"addHouse": (retrievedObject.house !== "") ? retrievedObject.house : "",  "addBarangay": (retrievedObject.brgy_id !== "") ? retrievedObject.brgy_id : "", "addCity": (retrievedObject.city_id !== "") ? retrievedObject.city_id : "", "addProvince": (retrievedObject.prov_id !== "") ? retrievedObject.prov_id: "", "addZip": (retrievedObject.zip !== "") ? retrievedObject.zip : "" };

    if (retrievedAddress['addBarangay'] == $brgy.value) {
      $zip.value = retrievedAddress['addZip'];
    } else {
      $zip.selectedIndex = 0;
      $hcode.val = '';
    }
    {%- if customer and customer.tags contains 'employee' or customer.email contains "goldenabc.com" -%}
    var fzip = retrievedAddress['addProvince'] ? retrievedAddress['addZip'] : '';
    $zip.value = fzip;
    {%- endif -%}
    
    $brgy.style.border = '1px solid #d9d9d9';
    $zip.style.border = '1px solid #d9d9d9';
    
  } else {
    $zip.selectedIndex = 0;
    if ($zip != '') { $zip.style.border = '1px solid #d9d9d9'; }
  }
}
  
function check_liquids(overall) {
    var $ncrluz = ['Metro Manila','Abra','Albay','Apayao','Aurora','Bataan','Batangas','Benguet','Bulacan','Cagayan','Camarines Norte','Camarines Sur','Cavite','Ifugao','Ilocos Norte','Ilocos Sur','Isabela','Kalinga','La Union','Laguna','Mountain Province','Nueva Ecija','Nueva Vizcaya','Pampanga','Pangasinan','Quezon','Quirino','Rizal','Sorsogon','Tarlac','Zambales','Outlying island provinces:','Batanes','Catanduanes','Marinduque','Masbate','Occidental Mindoro','Oriental Mindoro','Palawan','Romblon'].map(function(v) {
      return v.toUpperCase();
    });
    if (overall > 1000 && sessionStorage.address != undefined) {
      var $province = JSON.parse(sessionStorage.address).province;
      if ($ncrluz.indexOf($province) == -1) {
        document.querySelector('.frag-notif').style.display = 'block';
        document.querySelector('.cart-checkout-validation .cart__checkout').style.display = 'none';
        document.querySelector('.cart-checkout-validation .cart__checkout').disabled = true;
      } else {
        document.querySelector('.frag-notif').style.display = 'none';
        document.querySelector('.cart-checkout-validation .cart__checkout').style.display = 'block';
        document.querySelector('.cart-checkout-validation .cart__checkout').disabled = false;
      }
   }
}

{%- if account -%}
  
function PopulateAddress() {
    var is_valid = true;
    all_inputs.forEach(addr_input => {
      if (addr_input.id == 'house-code') {
        if (addr_input.value.length < 10) {
        addr_input.style.border = '1px solid #FF0000';
            is_valid = false;
        } else {
            addr_input.style.border = '1px solid var(--colorDrawerBorder)';
        }
      } else if (addr_input.id == 'phone') {
        if (addr_input.value.length < 11) {
        addr_input.style.border = '1px solid #FF0000';
            is_valid = false;
        } else {
            addr_input.style.border = '1px solid var(--colorDrawerBorder)';
        }
      } else {
        if (addr_input.value == '') {
          addr_input.style.border = '1px solid #FF0000';
          is_valid = false;
        } else {
          addr_input.style.border = '1px solid var(--colorDrawerBorder)';
        }
      }
    });
  
    all_selects.forEach(addr_select => {
      if (addr_select.value == '') {
        addr_select.style.border = '1px solid #FF0000';
        is_valid = false;
      } else {
        addr_select.style.border = '1px solid var(--colorDrawerBorder)';
      }
    });

    var retrievedObject = sessionStorage.getItem('address');

    if (is_valid) {
        var $newAddressForm = document.getElementById('AddressNewForm');
        $newAddressForm.querySelector('#AddressCompanyNew').value = $hcode.value;
        $newAddressForm.querySelector('input[name="address[address1]"]').value = $brgy.options[$brgy.selectedIndex].text;
        $newAddressForm.querySelector('input[name="address[address2]"]').value = $city.options[$city.selectedIndex].text;
        $newAddressForm.querySelector('select[name="address[province]"]').value = Capitalize($prov.options[$prov.selectedIndex].text);
        $newAddressForm.querySelector('input[name="address[city]"]').value = $prov.options[$prov.selectedIndex].text;
        $newAddressForm.querySelector('input[name="address[zip]"]').value = $zip.options[$zip.selectedIndex].text;
        $newAddressForm.querySelector('input[name="address[first_name]"]').value = document.getElementById('firstname').value;
        $newAddressForm.querySelector('input[name="address[last_name]"]').value = document.getElementById('lastname').value;
        $newAddressForm.querySelector('input[name="address[phone]"]').value = document.getElementById('phone').value;
        $newAddressForm.querySelector('select[name="address[country]"]').value = 'Philippines';
        cancelBtn();
        $newAddressForm.classList.toggle('hide');
    }
}
  
window.addEventListener('DOMContentLoaded', () => {
  new theme.Modals('AddressFinder', 'address-finder');
});
{%- else -%}  
function PopulateAddress() {
  var is_valid = true;
  
  all_inputs.forEach(addr_input => {
     if (addr_input.id == 'house-code') {
        if (addr_input.value.length < 10) {
        addr_input.style.border = '1px solid #FF0000';
            is_valid = false;
        } else {
            addr_input.style.border = '1px solid var(--colorDrawerBorder)';
        }
      } else {
        if (addr_input.value == '') {
          addr_input.style.border = '1px solid #FF0000';
          is_valid = false;
        } else {
          addr_input.style.border = '1px solid var(--colorDrawerBorder)';
        }
     }
  });
  
  all_selects.forEach(addr_select => {
    if (addr_select.value == '') {
      addr_select.style.border = '1px solid #FF0000';
      is_valid = false;
    } else {
      addr_select.style.border = '1px solid var(--colorDrawerBorder)';
    }
  });

  var retrievedObject = sessionStorage.getItem('address');
  var i = getAddress();

  if (is_valid) {
    document.querySelector('.selected-address-text').innerHTML = $hcode.value + ", " + $brgy.options[$brgy.selectedIndex].text + ", " + $city.options[$city.selectedIndex].text + ", " + $prov.options[$prov.selectedIndex].text + ", " + $zip.value + '.';
    storeData();
    cancelBtn();
    check_liquids({{ cart_weight_overall }});
    form_action.setAttribute('action', '/cart?' + $.param(getAddress()));
  } else {
    form_action.setAttribute('action', '');   
  }
  
  document.querySelector('.cart-checkout-validation .cart__checkout').disabled = false;
  document.querySelector('.cart-checkout-validation .cart__checkout').style.display = 'block';
  document.querySelector('.cart__address_finder').style.display = 'none';
  
  {%- render 'soldier-rules' -%}
}
  
function getAddress() {
  return {
    step: "contact_information",
    method: "shipping",
    "checkout[shipping_address][first_name]": "{{ customer.default_address.first_name }}",
    "checkout[shipping_address][last_name]": "{{ customer.default_address.last_name }}",
    "checkout[shipping_address][company]": $hcode.value,
    "checkout[shipping_address][address1]": $brgy.options[$brgy.selectedIndex].text,
    "checkout[shipping_address][address2]": $city.options[$city.selectedIndex].text,
    "checkout[shipping_address][city]": $prov.options[$prov.selectedIndex].text,
    "checkout[shipping_address][country]": "PH",
    "checkout[shipping_address][zip]": $zip.value,
    "checkout[shipping_address][province_code]": $prov.value !== '' ? $prov.options[$prov.selectedIndex].getAttribute('data-value') : "",
    "checkout[shipping_address][province]": $prov.value !== '' ? $prov.options[$prov.selectedIndex].innerHTML : "",
    "checkout[shipping_address][phone]": "{{ customer.default_address.phone }}",
    discount: "",
    locale: "en"
  }
}
  
function getStoredAddress() {
   var retrievedObject = JSON.parse(sessionStorage.getItem('address'));
   if(sessionStorage.address) {
      return {
        step: "contact_information",
        method: "shipping",
        "checkout[shipping_address][first_name]": "{{ customer.default_address.first_name }}",
    	"checkout[shipping_address][last_name]": "{{ customer.default_address.last_name }}",
        "checkout[shipping_address][company]": retrievedObject.house,
        "checkout[shipping_address][address1]": retrievedObject.barangay,
        "checkout[shipping_address][address2]": retrievedObject.city,
        "checkout[shipping_address][city]": retrievedObject.province,
        "checkout[shipping_address][country]": "PH",
        "checkout[shipping_address][zip]": retrievedObject.zip,
        "checkout[shipping_address][province_code]": retrievedObject.prov_chk,
        "checkout[shipping_address][province]": retrievedObject.province,
        "checkout[shipping_address][phone]": "{{ customer.default_address.phone }}",
        discount: "",
        locale: "en"
     }
  }
}  
  
function storeData() {
    var t ="";
    var newAddress = {};

    newAddress['province'] = $prov.value !== '' ?  $prov.options[$prov.selectedIndex].text : '';
    newAddress['city'] = $city.value !== ''? $city.options[$city.selectedIndex].text : '';
    newAddress['barangay'] =  $brgy.value !== '' ? $brgy.options[$brgy.selectedIndex].text : '';
    newAddress['zip'] = $zip.value !== '' ? $zip.options[$zip.selectedIndex].text : '';
    newAddress['house'] = $hcode.value != '' ? $hcode.value : "";
  
    newAddress['city_id'] = $city.value !== '' ?  $city.value : '';
    newAddress['prov_id'] = $prov.value !== '' ?  $prov.value : ''
    newAddress['brgy_id'] = $brgy.value !== '' ?  $brgy.value : ''
    newAddress['prov_chk'] = $prov.value !== '' ?  $prov.options[$prov.selectedIndex].getAttribute('data-value') : ''

    sessionStorage.setItem('address', JSON.stringify(newAddress));
  
  $helper_link.innerHTML = 'Edit your location?';
}
  
function check_session_address() {
  var session_address = JSON.parse(sessionStorage.getItem('address'));
  
  if (session_address && session_address.prov_id) {
    $prov.value = session_address.prov_id;
    $hcode.value = session_address.house;
    
    $prov.dispatchEvent(e);
  }
}
 
{%- comment -%}
function check_terms(e) {
  if (document.getElementById('CartTerms').checked) { 
     e.currentTarget.classList.add('btn--loading');
     if (document.querySelector('.saso-summary').innerHTML != '') {     
     }  
  } else {         
    document.getElementById('ModalHelper').classList.add('modal--is-active');
    document.getElementById('ModalHelper').querySelector('.helper-message').querySelector('span').innerHTML = "{{ 'cart.general.terms_confirm' | t }}";
    document.querySelector('body').classList.add('modal-open');   
    return false;
  }    
}
{%- endcomment -%}
  
window.addEventListener('DOMContentLoaded', () => {
  new theme.Modals('AddressFinder', 'address-finder');
  
  {%- unless cart.item_count == 0 -%} 
  document.querySelector('.js-modal-open-address-finder').addEventListener('click', check_session_address);
  {%- comment -%}document.querySelector('.cart__checkout.cart__checkout--page').addEventListener('click', check_terms);{%- endcomment -%}
  {%- endunless -%}

  {% if customer and customer.tags contains 'employee' or customer.email contains "goldenabc.com" %}
  retrievedObject = {
    'house' : "{{customer.default_address.company }}",
    'city' : "{{customer.default_address.address2 }}",
    'barangay' : " {{customer.default_address.address1 }}",
    'province' : "{{customer.default_address.province}}",
    'zip' : "{{customer.default_address.zip}}"
  }

  if (retrievedObject.house != "" && retrievedObject.barangay !== "" && retrievedObject.city !== "" && retrievedObject.province !== "" && retrievedObject.zip !== "") {
    sessionStorage.setItem('address', JSON.stringify(retrievedObject));   
  } else if (sessionStorage.address != undefined) {
    retrievedObject = JSON.parse(sessionStorage.getItem('address'));
    retrievedObject = {
      'house' : retrievedObject.house,
      'city' : retrievedObject.city,
      'barangay' : retrievedObject.barangay,
      'province' : retrievedObject.province,
      'zip' : retrievedObject.zip
    }
  } else {
    retrievedObject = {
      'house' : '',
      'city' : '',
      'barangay' : '',
      'province' : '',
      'zip' : ''
    }
  }
  {% else %}
  if ('{{customer.default_address.address1}}' != "" && '{{customer.default_address.city }}' !== "" && '{{customer.default_address.address2 }}' !== "" && '{{customer.default_address.province}}' !== "" && '{{customer.default_address.zip}}' !== "") {
      retrievedObject = {
      'house' : "{{ customer.default_address.company }}",
      'city' : "{{ customer.default_address.address2 }}",
      'barangay' : "{{ customer.default_address.address1 }}",
      'province' : "{{ customer.default_address.province }}",
      'zip' : "{{ customer.default_address.zip }}"
      }
      sessionStorage.setItem('address', JSON.stringify(retrievedObject));   
  } else if (sessionStorage.address != undefined) {
    retrievedObject = JSON.parse(sessionStorage.getItem('address'));

    retrievedObject = {
      'house' : retrievedObject.house,
      'city' : retrievedObject.city,
      'barangay' : retrievedObject.barangay,
      'province' : retrievedObject.province,
      'zip' : retrievedObject.zip
    }
  }    
  else {
    retrievedObject = {
      'house' : '',
      'city' : '',
      'barangay' : '',
      'province' : '',
      'zip' : ''
    }
  }
  {% endif %}
  {%- unless cart.item_count == 0 -%} 
  var retrievedAddress = {"addHouse": (retrievedObject.house !== "") ? retrievedObject.house + ", " : "",  "addBarangay": (retrievedObject.barangay !== "") ? retrievedObject.barangay + ", " : "", "addCity": (retrievedObject.city !== "") ? retrievedObject.city + ", " : "", "addProvince": (retrievedObject.province !== "") ? retrievedObject.province + ", " : "", "addZip": (retrievedObject.zip !== "") ? retrievedObject.zip : "" };
  if(sessionStorage.address != undefined && retrievedAddress['addHouse'] != "" && retrievedAddress['addBarangay'] !== "" && retrievedAddress['addCity'] !== "" &&retrievedAddress['addProvince'] !== "" && retrievedAddress['addZip'] !== "") {        
    document.querySelector('.selected-address-text').innerHTML = Capitalize(retrievedAddress['addHouse'] + retrievedAddress['addBarangay'] + retrievedAddress['addCity'] + retrievedAddress['addProvince'] + retrievedAddress['addZip'] + '.');
    $helper_link.innerHTML = 'Edit your location?';
    
    document.querySelector('.cart-checkout-validation .cart__checkout').disabled = false;
    document.querySelector('.cart-checkout-validation .cart__checkout').style.display = 'block';
    document.querySelector('.cart__address_finder').style.display = 'none';
  } else {
    document.querySelector('.cart-checkout-validation .cart__checkout').style.display = 'none';
    document.querySelector('.cart__address_finder').style.display = 'block';

    form_action.setAttribute('action', '/cart?' + $.param(getAddress()));
  }
  {%- endunless -%}
  {%- render 'soldier-rules' -%}
});
{%- endif -%}
</script> {% endcomment %}