
   
   <link rel="stylesheet" href="{{ 'custom-pickup.css' | asset_url | split: '?' | first }}">

   <style>
     @media only screen and (min-width: 200px) {
    .panel-view{
      display: block;
    }
  
     .icon-style{
    width: 382px;
  }
}

@media only screen and (min-width: 992px) {
  .panel-view{
    display: flex;
    margin: 16px 0 0 0;
  }
  .input-space{
     margin-right: 16px;
  }
 
  .icon-style{
    width: 280px;
  }
}
</style>

<i class="fa fa-search icon-search"></i>
    <input type="text" id="locationSearch" class="searchInputText" placeholder="Search by location name" />
    <div class="panel-view">
      <div class="field__input-wrapper">
      <select class="searchInputText input-space provinceSearch icon-style" id="provinceSearch">
         {%- render 'arrProvince-pickUp' -%}
      </select>
      <div class="field__caret">
        <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-10 field__caret-svg" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#caret-down"></use> </svg>
      </div>
        </div>
      
       <div class="field__input-wrapper">
      <select class="searchInputText citySearch icon-style" id="citySearch">
          <option value="">Select by City / Municipality</option>
      </select>
          <div class="field__caret">
        <svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-10 field__caret-svg" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#caret-down"></use> </svg>
      </div>
        </div>
    </div>

     <div style="display: flex; justify-content:space-between; border-bottom:2px solid lightgray;">
   <p style="margin: 19px 0;">Showing <span id="totalResult">0</span> result(s)</p>
   <div style="border: 1px solid black;border-radius: 14px; padding: 8px; margin: 11px 0; cursor: pointer;" id="showAllStores">Show all Stores</div>
         </div>
         
  <span id="MsgErrorFunction"></span>
  <div style="display:none;">
    <div class="radio__input">
      <input
        class="input-radio active-radio"
        type="radio"
        value="65625203dc4bf25a47865adc66f3892b"
        name="checkout[pick_up_in_store][handle]"
        id="checkout_delivery_option_id_65625203dc4bf25a47865adc66f3892b"
  
        data-checkout-total-shipping="Free"
        data-checkout-total-shipping-cents="0" />
    </div>
    <label class="radio__label" for="checkout_delivery_option_id_65625203dc4bf25a47865adc66f3892b">
      <div class="radio__label__primary">
        <div>1155 EDSA, Balintawak</div>
        <div class="small-text">1155 EDSA, Balintawak, Quezon City, 00</div>
        <div class="small-text pickup-instructions show-on-mobile">
          Usually ready in 24 hours
        </div>
      </div>
      <div class="radio__label__accessory">
        <div class="content-box__emphasis">Free</div>
        <div class="small-text pickup-instructions hide-on-mobile">
          Usually ready in 24 hours
        </div>
      </div>
    </label>
  </div>
<div class="nearBy" style="display: grid; overflow:scroll; max-height:300px; overflow-x:hidden; margin-top:21px; padding-right:15px;"></div>
<div class="StoreId_Data"></div>
<div class="attr_data"></div>

<script type="text/javascript" src="{{ 'custom-pickup.js' | asset_url }}" defer="defer"></script>
<script type="text/javascript" src="{{ 'custom-pickup-extension.js' | asset_url }}" defer="defer"></script>
<script>

  document.querySelectorAll('.section__header')[3].innerHTML =`<h2 class="section__title">
      Contact 
    </h2>
 
    <div class="field__input-wrapper" style="padding: 7px 0;"><label style="position: absolute; padding: 2px 8px;" for="checkout_shipping_address_first_name">First Name</label>
      <input style="padding: 18px;" autocomplete="shipping given-name" autocorrect="off" data-backup="first_name" class="field__input" aria-required="true" type="text" name="checkout[shipping_address][first_name]" id="checkout_shipping_address_first_name">
    </div>

    <div class="field__input-wrapper" style="padding: 7px 0;"><label style="position: absolute; padding: 2px 8px;" for="checkout_shipping_address_last_name">Last name</label>
      <input style="padding: 18px;" autocomplete="shipping family-name" autocorrect="off" data-backup="last_name" class="field__input" aria-required="true" type="text" name="checkout[shipping_address][last_name]" id="checkout_shipping_address_last_name">
    </div>


    <div class="field__input-wrapper field__input-wrapper--icon-right" style="padding: 7px 0 10px 0;"><label style="position: absolute; padding: 2px 8px;" for="checkout_shipping_address_phone">Phone (e.g. 639171234567)</label>
        <input style="padding: 18px;" autocomplete="shipping tel" autocorrect="off" data-backup="phone" data-phone-formatter="true" data-phone-formatter-country-select="[name='checkout[shipping_address][country]']" data-placeholder-label-required="Phone" data-placeholder-label-optional="Phone (optional)" class="field__input field__input--numeric" aria-required="true" size="30" type="tel" name="checkout[shipping_address][phone]" id="checkout_shipping_address_phone">
        <div class="field__icon">
        <div data-tooltip="true" id="phone_tooltip" class="tooltip-container"><button type="button" class="tooltip-control" data-tooltip-control="true" aria-label="More information" aria-describedby="tooltip-for-phone" aria-controls="tooltip-for-phone" aria-pressed="false" placeholder="Phone (e.g. 639171234567)"><svg class="icon-svg icon-svg--color-adaptive-lighter icon-svg--size-16 icon-svg--block icon-svg--center" role="presentation" aria-hidden="true" focusable="false"> <use xlink:href="#question"></use> </svg></button><span class="tooltip" role="tooltip" id="tooltip-for-phone">Use country code + mobile number</span></div>
        </div>
      </div>

    <h2 class="section__title">
      Store Locations
    </h2>
    `;

  
    function capitalizeEveryWord(inputString) {
  // Split the input string into an array of words
  const words = inputString.split(' ');

  // Use the map function to capitalize the first letter of each word
  const capitalizedWords = words.map(word => {
    // Check if the word is not empty
    if (word.length > 0) {
      // Capitalize the first letter and make the rest of the word lowercase
      return word[0].toUpperCase() + word.slice(1).toLowerCase();
    }
    // Return empty words as they are
    return word;
  });

  // Join the capitalized words back into a string
  return capitalizedWords.join(' ');
}

   var arr = JSON.parse(sessionStorage.getItem("arrProvince"));

      document.querySelector('.provinceSearch').addEventListener("change",function SearchProvince() {
      let province = $(".provinceSearch").val();
      url = `https://tools.gabcgfs.com/address_finder_dev.php?PROVINCE=${province}`;
      CitySearch = [];
      CitySearch.push('<option value="">Select by City / Municipality</option>');
      jQuery.ajax({url: url, type: "GET", dataType: "jsonp", contentType: "application/json; charset=UTF-8"}).done(function(json) {
        if (json != "") {
          for (let i = 0; i < json[0].CITY.length; i++) {
            const removeCity =json[0].CITY[i].CITY.split(" ");
       
            const arrC = `<option value="${
              removeCity[0]
            }">${
              json[0].CITY[i].CITY
            }</option>`;
            CitySearch.push(arrC);
          }
        } else {
          CitySearch.push();
        }
          CitySearch.sort();
        $(".citySearch").html(CitySearch.join(""));
      });
    });
  
  function getStoreListData(Title, listaddress, City, Province, Zipcode, Longitude, Latitude, pickUpDate) {
$('.active-radio').click();
    fetch('https://tools.gabcgfs.com/graphql/getStoreLocation.php').then(response => response.json()).then(json => {
      
// Get the value of the 'name' parameter from the URL
       let jsonData = json.data.locations.edges;

      const nameParam = Title;

// Filter the data based on the 'name' parameter
      const filteredData = jsonData.filter(item => {
        if (nameParam) {
          return item.node.name.toLowerCase().includes(nameParam.toLowerCase());
        } else {
          return true; // If 'name' parameter is not provided, return all items
        }
      });
 
// Log the filtered data
      $('.StoreId_Data').html("");
      if (filteredData[0].node.id != '') {
          pizza = filteredData[0].node.id.split("/");
      const pickup_store_id = pizza[4];
        resOutput = ` <input type="hidden" value="${
         pickup_store_id
        }" name="checkout[attributes][pickup_store_id]"/>`
        $('.StoreId_Data').html(resOutput);

      }
    })
    resOutput = `
         <input type="hidden" value="${Title}" name="checkout[attributes][pickup_store_title]"/>
          <input type="hidden" value="${listaddress}" name="checkout[attributes][pickup_store_street]"/>
           <input type="hidden" value="${City}" name="checkout[attributes][pickup_store_city]"/>
            <input type="hidden" value="${Province}" name="checkout[attributes][pickup_store_province]"/>
             <input type="hidden" value="${Zipcode}" name="checkout[attributes][pickup_store_zip]"/>
             <input type="hidden" value="{{ checkout.id }}" name="checkout[attributes][Checkout_#]"/>
              <input type="hidden" value="${Longitude}" name="checkout[attributes][Longitude]"/>
               <input type="hidden" value="${Latitude}" name="checkout[attributes][Latitude]"/>
                <input type="hidden" value="${pickUpDate}" name="checkout[attributes][estimated_date]"/>

       `;
    $('.attr_data').html(resOutput)
    setShippingMethod = `Pick up in store Â· <strong>${Title}</strong><br><p class="small-text">${listaddress} ${Zipcode}</p>`;
    localStorage.setItem('ShippingMethod', setShippingMethod)
  }


  fetch("https://tools.gabcgfs.com/graphql/getStoreLocation.php")
    .then((response) => response.json())
    .then((data) => fetchData(data));

  function fetchData(json) {
    arr = [];
    arr_data = [];
    let getList = json.data.locations.edges;

    for (let i = 0; i < getList.length; i++) {
      pizza = getList[i].node.id.split("/");
      const id = pizza[4];
      const storeName = getList[i].node.name;

      arr.push({
        id: id,
        Title: storeName
      });
    }

    fetch("https://omnistorelocations.goldenabc.com/storelocations/Shopify/Api/GetStoreLocations?brand=penshoppe")
      .then((response) => response.json())
      .then((jsonData) => {
        data1 = arr;
        data2 = jsonData;
        // Parse the JSON strings into JavaScript objects
        const array1 = data1;
        const array2 = data2.message;

        // Create an empty result array
        const mergedArray = [];
        // Iterate through array1
        for (const obj1 of array1) {
          // Find a matching object in array2 based on the "name" property
          const obj2 = array2.find((item) => item.Title.trim().toLowerCase() === obj1.Title.trim().toLowerCase());

          // If a match is found, merge the properties into a new object
          if (obj2) {
            const mergedObject = {
              ...obj1,
              ...obj2
            };
            mergedArray.push(mergedObject);
          }
        }

        for (let i = 0; i < mergedArray.length; i++) {
          const Title = mergedArray[i].Title;
          const City = mergedArray[i].City;
          const Province = mergedArray[i].Province;
          const Zipcode = mergedArray[i].Zipcode;
          const Latitude = mergedArray[i].Latitude;
          const Longitude = mergedArray[i].Longitude;
          const Area = mergedArray[i].Area;
           const OpeningHours = mergedArray[i].OpeningHours;
          const pickUpDate = getReadyPickUp(new Date(),Area);
          const listaddress = `${mergedArray[i].Street.trim()}, ${mergedArray[i].City.trim()}, ${mergedArray[i].Country.trim()}`;
          
             pizza=OpeningHours.split(' ');
           const OpeningTime=`${pizza[3]} - ${pizza[5]}`;
          html = `
          <div class="filterData" style="display: flex; margin-bottom: 12px;">

             <div class="radio__input" style="margin-top: 42px;">
                <input
                  class="input-radio" onclick="getStoreListData('${Title.trim()}','${listaddress}','${City}','${Province}','${Zipcode}','${Longitude}','${Latitude}','${pickUpDate}')"
                  type="radio"
                  value="${i}"
                  name="checkout[attributes][id]"
                  id="checkout_delivery_option_id_${i}"
                  data-checkout-total-shipping="Free"
                  data-checkout-total-shipping-cents="0"
                />
             </div>
   
             <label class="radio__label" for="checkout_delivery_option_id_${i}">
              <div class="radio__label__primary" style="padding-left: 14px;">
              <div>
              <div class="locationName" style="font-size: 17px; font-weight: bold; margin: 5px 0;">${capitalizeEveryWord(Title)}</div>
              <div style="font-size: 13px; font-weight: 600; color: lightgreen;">Ready for pick up between ${pickUpDate}</div>
              </div>
               
                <div class="small-text" style="font-size: 14px; padding: 5px 0;">${mergedArray[i].Street.trim()}, <span class="city">${capitalizeEveryWord(City)}</span>, <span class="province">${capitalizeEveryWord(Province)}</span>, ${mergedArray[i].Country.trim()}</div>
                   <div class="small-text pickup-instructions show-on-mobile" style="margin: 5px 0;">
                     <span style="font-size: 14px;">${OpeningTime}</span>
                  </div>
                  <div class="small-text pickup-instructions hide-on-mobile" style="margin: 5px 0;">
                    <span style="font-size: 14px;">${OpeningTime}</span>
                  </div>
                </div>
             </label>
          </div>
                `;

          arr_data.push(html);

        }

        if (arr_data.join("") == "") {
          document.querySelector(".nearBy").innerHTML = `<div style="display: flex; justify-content: center;"><h1 style="
            padding: 0 12px;
            background-color: red;
            color: white;
            font-weight: 400;
            width: 100%;
            text-align: -webkit-center;
            ">There is no store near you</h1></div>`;
        } else {
          document.querySelector(".nearBy").innerHTML = arr_data.join('');
          getTotalResult('firstOutputTotal');
        }
      });
  }
</script>
