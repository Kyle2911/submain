{%- liquid
  unless grid_item_width
    assign grid_item_width = 'medium-up--one-quarter small--one-half'
  endunless

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif
  
  assign visible = true

  if settings.exclusive and product.template_suffix == 'exclusive'
  	unless customer or customer.tags contains settings.exclusive_collection_tag
    	assign visible = false
    endunless
  endif

  if product.template_suffix == 'gwp'
    assign visible = false
  endif
  
  if settings.preorder_enable and settings.preorder_limited and product.template_suffix == 'preorder'
    unless customer and customer.tags contains settings.preorder_limited_tag
       	assign visible = false
    endunless
 endif

  assign product_tags = product.tags | join: ','
  assign has_custom_label = false
  if product_tags contains '_label_'
    for tag in product.tags
      if tag contains '_label_'
        assign tag_starts_with = tag | slice: 0
        if tag_starts_with == '_'
          assign has_custom_label = true
          assign custom_label = tag | replace: '_label_', ''
        endif
      endif
    endfor
  endif
-%}

{%- if visible -%}
<div class="grid__item grid-product {{ grid_item_width }}{%- unless product.template_suffix == 'gwp' -%}{% if settings.quick_shop_enable %} grid-product__has-quick-shop{% endif %}{%- endunless -%}" data-aos="row-of-{{ per_row }}" data-product-handle="{{ product.handle }}" data-product-id="{{ product.id }}" data-product-sku="{{ product.selected_or_first_available_variant.sku }}">
  <div class="grid-product__content{% if product.available == false and product.template_suffix != 'coming-soon' %} grid-product__tag--sold-out{% endif %}">
    {%- if has_custom_label -%}
      <div class="grid-product__tag grid-product__tag--custom">
        {{ custom_label }}
      </div>
    {%- else -%}
      {%- unless product.available -%}
      {%- unless product.template_suffix == 'coming-soon' -%}
        <div class="grid-product__tag grid-product__tag--sold-out">
          {{ 'products.product.sold_out' | t }}
        </div>
      {%- endunless -%}
      {%- endunless -%}
      {%- if on_sale and product.available -%}
        {%- if settings.product_save_amount -%}
          <div class="grid-product__tag grid-product__tag--sale">
            {%- if settings.product_save_type == 'dollar' -%}
              {% capture saved_amount %}{{ product.compare_at_price | minus: product.price | money }}{% endcapture %}
            {%- else -%}
              {% capture saved_amount %}{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%{% endcapture %}
            {%- endif -%}
            {{ 'products.general.save_html' | t: saved_amount: saved_amount }}
          </div>
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      assign fixed_aspect_ratio = false
      unless settings.product_grid_image_size == 'natural'
        assign fixed_aspect_ratio = true
      endunless
    -%}

    {%- assign preview_image = product.featured_media.preview_image -%}
    {%- assign img_url = preview_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
    {%- render 'hulkapps-wishlist-collection-btn', productId: product.id, variantId: product.selected_or_first_available_variant.id -%}
    <a href="{{ product.url | within: collection }}" class="grid-product__link">
      <div class="grid-product__image-mask">
        {%- unless product.template_suffix == 'gwp' -%}
        {%- if settings.quick_shop_enable -%}
          <div class="quick-product__btn quick-product__btn--not-ready js-modal-open-quick-modal-{{ product.id }} small--hide">
            <span class="quick-product__label">{{ settings.quick_shop_text }}</span>
          </div>
        {%- endif -%}
        {%- endunless -%}
        {%- render 'badges', product: product -%}
        {%- if fixed_aspect_ratio -%}
          <div
            class="grid__image-ratio grid__image-ratio--{{ settings.product_grid_image_size }}">
            <img class="lazyload{% unless settings.product_grid_image_fill %} grid__image-contain{% endunless %}"
                data-src="{{ img_url }}"
                data-widths="[180, 284, 360, 540, 720, 900, 1080]"
                data-aspectratio="{{ preview_image.aspect_ratio }}"
                data-sizes="auto"
                alt="{{ preview_image.alt | escape }}">
          </div>
        {%- else -%}
          <div class="image-wrap"
            style="height: 0; padding-bottom: {{ 100 | divided_by: preview_image.aspect_ratio }}%;"
            >
            {%- assign img_url = preview_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
            <img class="grid-product__image lazyload"
                data-src="{{ img_url }}"
                data-widths="[180, 284, 360, 389, 540, 720, 900, 1080]"
                data-aspectratio="{{ preview_image.aspect_ratio }}"
                data-sizes="auto"
                alt="{{ preview_image.alt | escape }}">
            <noscript>
              <img class="grid-product__image lazyloaded"
                src="{{ preview_image | img_url: '400x' }}"
                alt="{{ preview_image.alt | escape }}">
            </noscript>
          </div>
        {%- endif -%}

        {%- if settings.product_hover_image and product.images.size > 1 -%}
          {%- for image in product.images offset: 1 limit: 1 -%}
            {%- assign second_image = image -%}
          {%- endfor -%}
          <div class="grid-product__secondary-image small--hide">
            {%- assign img_url = second_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
            <img class="lazyload"
                data-src="{{ img_url }}"
                data-widths="[180, 284, 360, 389, 540, 720, 1000]"
                data-aspectratio="{{ second_image.aspect_ratio }}"
                data-sizes="auto"
                alt="{{ second_image.alt }}">
          </div>
          {%- endif -%}
          {%- if section.settings.custom_badge_enabled -%}
          {%- for block in section.blocks -%}
          {%- for badge_product in product.collections -%}
        	{%- if badge_product.handle == block.settings.collection -%}
        	  {%- style -%}
        	  {% if block.settings.badge_color != blank %}
        	  .custom-badge--{{ block.id }} {
        	  		background-color: {{ block.settings.badge_color }};
        			color:{{ block.settings.badge_text_color }};
        	  }
        	  {% endif %}
        	  {%- endstyle -%}
        	  <div class="custom-badge custom-badge--{{ block.id }}">
        		{{ block.settings.badge_text }}
        	  </div>
        	{%- endif -%}
          {%- endfor -%}
          {%- endfor -%}
          {%- endif -%}
        
          {%- if product.tags contains 'extended-size-tops' -%}
        	<div class="custom-badge extended-sizing">{{ 'collections.types.extended_tops' | t }}</div>
          {%- endif -%}
        
          {%- if product.tags contains 'extended-size-bottoms' -%}
        	<div class="custom-badge extended-sizing">{{ 'collections.types.extended_bottoms' | t }}</div>
          {%- endif -%}

          {% for t in product.tags %}
          {%- if t contains 'BestSeller' -%}
        	<div class="custom-badge extended-sizing">{{ 'collections.types.best_seller' | t }}</div>
          {%- endif -%}
          {% endfor %}
        
          {%- if product.tags contains 'last-restocked' -%}
        	<div class="custom-badge">{{ 'collections.types.last_restock' | t }}</div>
          {%- endif -%}

          {%- if product.tags contains 'last-drop' -%}
        	<div class="custom-badge">{{ 'collections.types.final_drop' | t }}</div>
          {%- endif -%}

          {%  if product.template_suffix == 'coming-soon' %}
          <div class="custom-badge extended-sizing">{{ 'collections.types.coming_soon' | t }}</div>
          {% endif %}

          {%- if settings.enable_global_violators -%}
        	{%- assign global_violators = settings.global_violators | split: ' | ' -%}
        	{%- assign global_violators_tags = settings.global_violators_tag | split: ' | ' -%}

        	{%- for tag in global_violators_tags -%}
            {%- if product.tags contains tag -%}
        	{%- assign new_index = forloop.index | minus: 1 -%}
            {%- assign violator = global_violators[new_index] -%}
            <div class="custom-badge sale">{{ violator }}</div>
            {%- endif -%}
        	{%- endfor -%}
          {%- endif -%}

          {%- if settings.enable_promo_violators -%}
        	{%- assign promo_violators = settings.promo_violators | split: ' | ' -%}
        	{%- assign promo_violators_tags = settings.promo_violators_tag | split: ' | ' -%}

        	{%- for tag in promo_violators_tags -%}
            {%- if product.tags contains tag -%}
        	{%- assign new_index = forloop.index | minus: 1 -%}
            {%- assign promo_violator = promo_violators[new_index] -%}
            <div class="custom-badge promo">{{ promo_violator }}</div>
            {%- endif -%}
        	{%- endfor -%}
          {%- endif -%}
      </div>

      <div class="grid-product__meta">
        <div class="grid-product__title">{{ product.title }} &mdash; &nbsp;
        {%- if on_sale -%}
          <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
          <span class="grid-product__price--original">{{ product.compare_at_price | money }}</span>
          <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
        {%- endif -%}
        {%- if product.price_varies -%}
        {%- assign price = product.price_min | money -%}
          <span {% if on_sale %}class="sale-price"{% endif %}>
            {{ 'products.general.from_text_html' | t: price: price }}
          </span>
        {%- else -%}
          <span {% if on_sale %}class="sale-price"{% endif %}>
            {%- assign price_with_decimal = product.price  | money | split: '.' -%}
            {{ price_with_decimal[0] }}<sup>{{ price_with_decimal[1] }}</sup>
          </span>
        {%- endif -%}
        </div>
        {%- comment -%}
        {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', jm_style: '', concierge_install: true, product: product %}
        {%- if settings.vendor_enable -%}
          <div class="grid-product__vendor">{{ product.vendor }}</div>
        {%- endif -%}
        <div class="grid-product__price">
          {%- if on_sale -%}
            <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
            <span class="grid-product__price--original">{{ product.compare_at_price | money }}</span>
            <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
          {%- endif -%}
          {%- if product.price_varies -%}
            {%- assign price = product.price_min | money -%}
            <span {% if on_sale %}class="sale-price"{% endif %}>
              {{ 'products.general.from_text_html' | t: price: price }}
            </span>
          {%- else -%}
            <span {% if on_sale %}class="sale-price"{% endif %}>
              {%- assign price_with_decimal = product.price  | money | split: '.' -%}
              {{ price_with_decimal[0] }}<sup>{{ price_with_decimal[1] }}</sup>
            </span>
          {%- endif -%}

          {%- assign product_variant = product.selected_or_first_available_variant -%}
          {%- if product_variant.unit_price_measurement -%}
            <div class="product__unit-price">
              {%- capture unit_price_base_unit -%}
                {%- if product_variant.unit_price_measurement -%}
                  {%- if product_variant.unit_price_measurement.reference_value != 1 -%}
                    {{ product_variant.unit_price_measurement.reference_value }}
                  {%- endif -%}
                  {{ product_variant.unit_price_measurement.reference_unit }}
                {%- endif -%}
              {%- endcapture -%}

              {{ product_variant.unit_price | money }}/{{ unit_price_base_unit }}
            </div>
          {%- endif -%}
        </div>
        {%- endcomment -%}
        {%- if product.handle == 'one-piece-reversible-coach-jacket-with-wanted-all-over-print' -%}
        <div class="collection-type">{{ 'collections.types.limited_edition' | t }}</div>
        {%- endif -%}
        {%- if product.tags contains 'co-ords' -%}
      	  <div class="collection-type">{{ 'collections.types.coords' | t }}</div>
    	{%- endif -%}
        
        {%- if product.tags contains 'improved-fit' -%}
      	  <div class="collection-type">{{ 'collections.types.improved_fit' | t }}</div>
    	{%- endif -%}
        
        {%- if product.tags contains 'new-fit' -%}
      	  <div class="collection-type">{{ 'collections.types.new_fit' | t }}</div>
    	{%- endif -%}
        
        {%- if product.tags contains 'restock' -%}
      	  <div class="collection-type">{{ 'collections.types.back_in_stock' | t }}</div>
    	{%- endif -%}
      </div>
    </a>

    {% comment %}
    {%- if product.template_suffix ==  'coming-soon' -%}
    <div class="waitlist-container">
      <div class="js-modal-open-waitlist-btn">
        {%- render 'icon-plus' -%}
        <span>{{ 'products.product.waitlist' | t }}</span>
      </div>
    </div>
	{%- endif -%}
    {% endcomment %}

    {%- if settings.enable_swatches -%}
      {%- assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase -%}
      {%- assign swatch_file_extension = 'png' -%}

      {%- for option in product.options_with_values -%}
        {%- liquid
          assign option_name = option.name | downcase
          assign is_color = false
          if option_name contains swatch_trigger
            assign is_color = true
          elsif swatch_trigger == 'color' and option_name contains 'colour'
            assign is_color = true
          endif
        -%}
        {%- if is_color -%}
          {%- assign option_index = forloop.index0 -%}
          {%- assign values = '' -%}
          <div class="grid-product__colors">
            {%- for variant in product.variants -%}
              {%- assign value = variant.options[option_index] %}
              {%- unless values contains value -%}
                {%- liquid
                  assign values = values | join: ',' | append: ',' | append: value | split: ','

                  assign color_file_name = value | handle | append: '.' | append: swatch_file_extension
                  assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
                  assign color_swatch_fallback = value | split: ' ' | last | handle
                  assign color_count = color_count | plus: 1
                -%}

                <a
                  href="{{ variant.url | within: collection }}"
                  class="color-swatch color-swatch--small"
                  aria-label="{{ product.title }} - {{ value }}"
                  style="background-color: {{ color_swatch_fallback }};{% if images[color_file_name] != blank %}  background-image: url({{ color_image }});{% endif %}">
                </a>
              {%- endunless -%}
             {%- endfor -%}
          </div>
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
    {%- if settings.enable_product_reviews -%}
      <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
    {%- endif -%}
    {%- if inventory_count != blank or inventory_count > 0 -%}{%- render 'progress-bar', product: product, progress_bar_text: progress_bar_text, inventory_count: inventory_count -%}{%- endif -%}
  </div>
</div>
{%- endif -%}